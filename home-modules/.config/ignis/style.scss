@use "wm";

@use "sass:string";

// Constants

$padding: 0.4rem;

// Mixins

// Ensure elements don't go over the sides
@mixin side($side) {
  .#{$side} {
    padding-#{$side}: $padding;
  }
}

@include side(left);
@include side(right);


// Apply to everything
* {
	border-width: 0;
	padding: 0;
}

// Built-In Widgets

tooltip {
	@include wm.border;
	padding: $padding;
	background-color: string.unquote("@theme_bg_color");
}

window {
	@include wm.border;
}

scale {
	$border-radius: 0.74rem;

  min-width: 3.75rem;

	highlight {
		border-radius: $border-radius;
	}

	trough {
		min-height: 0.3rem;
		border-radius: $border-radius;
	}

	slider {
		all: unset;
	}
}

popover {
	* {
		background-color: string.unquote("@theme_bg_color");
	}

	label {
		padding: 0 $padding;
	}

	/* Only draw a border around the arrow that points to the icon */
	& > arrow {
		@include wm.border
	}

	contents {
		@include wm.border
	}

	stack *:hover {
		color: string.unquote("@accent_color");
		font-weight: bold;
	}
}

// Libadwaita Style Classes

// Make sure flat buttons do not take up extra space
.flat {
	min-width: 0;
	min-height: 0;
}

// Custom Classes

.focused {
	@include wm.border;
	border-width: 1px;
}

.player {
	padding: $padding;
}

$statColors: (
  "memory": "@orange_1",
  "cpu": "@green_1",
  "disk": "@blue_1",
  "temperature": "@purple_1",
);

@each $class, $color in $statColors {
  .#{$class} {
    color: string.unquote($color);
	}
}

.active {
	color: string.unquote("@accent_color");
  font-weight: bold;
}


