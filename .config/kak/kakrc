add-highlighter global/ number-lines -hlcursor

# Source plug.kak
source "%val{config}/plugins/plug.kak/rc/plug.kak"

plug "robertmeta/plug.kak" noload

plug "ul/kak-lsp" do %{
	cargo install --locked --force --path .
} config %{
	# Cool unicode indicators
	set-option global lsp_diagnostic_line_error_sign "‚úñ"
	set-option global lsp_diagnostic_line_warning_sign "‚û§"

	# Format on save
	hook global WinSetOption filetype=(c|haskell|rust) %{
		# Enable lsp
		lsp-enable

		# Format before saving
		hook buffer BufWritePre .* lsp-formatting-sync
		
		# Highlight errors in code
		lsp-inline-diagnostics-enable window

		# lsp user mode
		map window user l ": enter-user-mode lsp<ret>" -docstring "LSP"
		map window user L ": enter-user-mode -lock lsp<ret>" -docstring "LSP (lock)"
	}
	#    set-option global lsp_hover_max_lines 10
}

plug "screwtapello/kakoune-shellcheck" domain "gitlab.com" config


plug "eraserhd/parinfer-rust" do %{
	cargo install --force --path .
	cargo clean
} config %{
	hook global WinSetOption filetype=(clojure|lisp|scheme|racket) %{
		parinfer-enable-window -smart
	}
}

hook global WinSetOption filetype=sh %{
	set-option window formatcmd "shfmt"
	hook buffer BufWritePre .* format
}

hook global WinSetOption filetype=c %{
	set-option window formatcmd 'clang-format --style="{IndentWidth: 4}"'
	hook buffer BufWritePre .* format
}

# Automatic tab handling
# No longer maintained
plug "andreyorst/smarttab.kak" defer smarttab %{
	set-option global softtabstop 4
} config %{
	hook global WinSetOption filetype=(kak|bash|plain) smarttab
   
	hook global WinSetOption filetype=(c|haskell|rust|yaml|lisp) expandtab
}

# Highlight current line and/or current column
plug "insipx/kak-crosshairs" config %{
	crosshairs
}

# File tree navigator
# No longer maintained
plug "andreyorst/kaktree" defer kaktree %{
	set-option global kaktree_double_click_duration "0.5"
	set-option global kaktree_indentation 1
	set-option global kaktree_dir_icon_open  "‚ñæ üóÅ "
	set-option global kaktree_dir_icon_close "‚ñ∏ üóÄ "
	set-option global kaktree_file_icon      "‚†Ä‚†Äüñ∫"
} config %{
	hook global WinSetOption filetype=kaktree %{
		remove-highlighter buffer/numbers
		remove-highlighter buffer/matching
		remove-highlighter buffer/wrap
		remove-highlighter buffer/show-whitespaces
	}#
	kaktree-enable
}

plug "DERPSQUID9/kakoune-cyberpunk-neon" theme config %{
	colorscheme cyberpunk-neon
}

# Powerline Bar
plug "jdugan6240/powerline.kak" defer powerline %{
	set-option global powerline_shorten_bufname short

	# Use my custom powerline theme
	powerline-theme cyberpunk-neon

	# Default layout
	#set-option global powerline_format "git bufname line-column mode-info filetype client session position"
} config %{
	powerline-start
}

# Escape arguments so that they can be passed to Kakoune
# Required by auto-pairs.kak
plug "alexherbo2/prelude.kak"

# Pairing parentheses and brackets
plug "alexherbo2/auto-pairs.kak" %{
	#default
	#set-option window "(" ")" "{" "}" "[" "]" '"' '"' "'" "'" "`" "`" "‚Äú" "‚Äù" "‚Äò" "‚Äô" "¬´" "¬ª" "‚Äπ" "‚Ä∫"

	# No single quotes
	hook global WinSetOption filetype=(haskell|rust) %{
		set-option window auto_pairs "(" ")" "{" "}" "[" "]" '"' '"' "`" "`" "‚Äú" "‚Äù" "‚Äò" "‚Äô" "¬´" "¬ª" "‚Äπ" "‚Ä∫"
	}

	# No single quotes or backticks
	hook global WinSetOption filetype=lisp %{
		set-option window auto_pairs "(" ")" "{" "}" "[" "]" '"' '"' "‚Äú" "‚Äù" "‚Äò" "‚Äô" "¬´" "¬ª" "‚Äπ" "‚Ä∫"
	}
}

# Highlight recursive pairs of parentheses centered from cursor
plug "Bodhizafa/kak-rainbow" config %{
	map global user R ": rainbow-enable<ret>" -docstring "continuous rainbow bracketing"
	map global user r ": rainbow-disable<ret>" -docstring "disable rainbow brackets"

	# colors:                         pink         orange        yellow       green         blue         purple     
	set-option global rainbow_colors "rgb:ff00ff" "rgb:f57600"  "rgb:ffff00" "rgb:00ff00" "rgb:0abdc7" "rgb:721c92"

	hook global WinSetOption filetype=(.*) rainbow-enable-window
}

# Search highlighter
plug "alexherbo2/search-highlighter.kak"

# fzf integration
# No longer maintained
plug "andreyorst/fzf.kak"

# Easy navigation of open buffers
plug "delapouite/kakoune-buffers" config %{
	# Buffer user mode
	map global user b ": enter-buffers-mode<ret>" -docstring "buffers"
	map global user B ": enter-user-mode -lock buffers<ret>" -docstring "buffers (lock)"
}

# Preview faces in a colorscheme
plug "delapouite/kakoune-palette"

# Enhanced selections
plug "delapouite/kakoune-auto-percent"

# Enhanced searches
plug "delapouite/kakoune-auto-star"

# Tagbar browsing
# No longer maintained
plug "andreyorst/tagbar.kak" defer "tagbar" %{
	set-option global tagbar_sort false
	set-option global tagbar_size 40
	set-option global tagbar_display_anon false
} config %{
	# if you have wrap highlighter enamled in you configuration
	# files it"s better to turn it off for tagbar, using this hook:
	hook global WinSetOption filetype=tagbar %{
		remove-highlighter window/wrap
		# you can also disable rendering whitespaces here, line numbers, and
		# matching characters
	}
	# Automatically start tagbar on certain filetypes
	#hook global WinSetOption filetype=(css|html|haskell|rust) %{
		#tagbar-enable
	#}
}

# Manual indentation
plug "alexherbo2/manual-indent.kak" config %{
	require-module manual-indent

	hook global WinCreate .* %{
		manual-indent-enable
	}

	hook global WinSetOption filetype=lisp %{
		manual-indent-remove-filetype-hooks
	}
}

# Surround selections with paired characters
# Is not affected by auto-pairs like kakoune-mirror is
plug "alexherbo2/surround.kak" config %{
	map global user q ": enter-user-mode surround<ret>" -docstring "surround mode"
	map global user Q ": surround-enter-insert-mode<ret>" -docstring "surround insert mode"

	#set-option global surround_begin auto-pairs-disable
	#set-option global surround_end auto-pairs-enable
}

# Symmetrically grow/shrink horizontlly.
plug "delapouite/kakoune-mirror" config %{
	map global user m ": enter-user-mode -lock mirror<ret>" -docstring "Enter mirror mode"
}

# Selects all adjacent lines that match the current selection
plug "occivink/kakoune-vertical-selection" config %{
#	map global user v ': vertical-selection-down<ret>' -docstring "Copy current selection downwards."
#	map global user ^ ': vertical-selection-up<ret>' -docstring "Copy current selection upwards."
#	map global user V ': vertical-selection-up-and-down<ret>' -docstring "Copy current selection upwards or downwards."
}

# Enhances text objects
# Depends on kakoune-vertical-selection
plug "delapouite/kakoune-text-objects" %{
	text-object-map
}

# Roguelike-style light simulation
plug "occivink/kakoune-roguelight" config %{
	define-command roguelight-toggle %{
		try %{
			crosshairs
			roguelight-enable
		} catch %{
			roguelight-disable
		}

		hook -group roguelight window RawKey .* roguelight-refresh
	}

	define-command roguelight-map %{
		edit -readonly "%val{config}/plugins/kakoune-roguelight/map"
		roguelight-toggle
	}
}

# Smooth scrolling
plug "caksoylar/kakoune-smooth-scroll" config %{
	# Automatically enable for every window
	hook global WinCreate .* %{
		hook -once window WinDisplay .* smooth-scroll-enable
	}
}

# Get rid of Clippy
set-option global ui_options ncurses_assistant=none

# Tabs are 4 characters long
set-option global tabstop 4
set-option global indentwidth 4

# But Lisp has 2 character tabs
hook global WinSetOption filetype=(lisp) %{
	set-option window tabstop 2
	set-option window indentwidth 2
}

# Function Key Mapping

# Utilities
map global normal <F1> ": tagbar-enable<ret>"
map global normal <F2> ": tagbar-toggle<ret>"
map global normal <F3> ": fzf-mode<ret>"
map global normal <F4> ": kaktree-toggle<ret>"

# Info
map global normal <F5> ": info-buffers<ret>"
map global normal <F6> ": new buffer *debug*<ret>"

# Navigate to error
map global normal <F7> ": lsp-find-error --previous --include-warnings<ret>"
map global normal <F8> ": lsp-find-error --include-warnings<ret>"
map global normal <a-F7> ": lsp-find-error --previous<ret>"
map global normal <a-F8> ": lsp-find-error <ret>"

# Linting
unmap global normal <F9> ": tagbar-toggle<ret>"
map global normal <F9> ": lsp-hover<ret>"
map global normal <F10> ": new lsp-diagnostics<ret>"

# Bash Only
hook global WinSetOption filetype=(sh|kak) %{
	lsp-disable-window

	map window normal <F7> ": lint-previous-error<ret>"
	map window normal <F8> ": lint-next-error<ret>"

	map window normal <F9> ": lint<ret>"
	map window normal <F10> ": new buffer *lint-output*<ret>"
}

# Exiting
map global normal <F11> ": delete-buffer<ret>"
map global normal <F12> ": quit<ret>"

# Alt + Number keymaps
# map global normal <a-1>
# map global normal <a-2>
# map global normal <a-3>
# map global normal <a-4>
# map global normal <a-5>
# map global normal <a-6>
# map global normal <a-7>
# map global normal <a-8>
# map global normal <a-9>
# map global normal <a-0>
